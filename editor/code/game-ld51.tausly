------------------------------------------------------------
 * Setup
------------------------------------------------------------

SIZE 800, 600

INIT theme_seconds = 10
INIT theme_milliseconds = theme_seconds * 1000
INIT start_stage = 0

INIT game_width = 480
INIT game_height = 480

INIT stage_timer

DIM(2) move
INIT speed
INIT e
INIT x
INIT y
INIT t

DIM(48) random_i
INIT random_i_cursor



------------------------------------------------------------
 * Dimension Keys
------------------------------------------------------------

INIT _enabled = 0
INIT _x = 1
INIT _y = 2
INIT _width = 3
INIT _height = 4
INIT _directionx = 5
INIT _directiony = 6
INIT _speed = 7
INIT _state = 8
INIT _friendly = 9
INIT _ox = 10
INIT _oy = 11
INIT _minx = 12
INIT _maxx = 13
INIT _time = 14
INIT _powerup = 15

GOTO Initialize



------------------------------------------------------------
 * Setup Stages
------------------------------------------------------------

ðŸ˜Ž Stage 1

swarm_count = 30
swarm_count_alive = 30

swarm_shoot_interval = 500
swarm_shoot_factor = 2

swarm_y_max = 7
swarm_y_interval = 15000

FOR i = 0 TO swarm_count - 1
  x = i % 10
  y = FLOOR(i / 10)
  
  e = enemies(i)
  e(_enabled) = TRUE
  e(_ox) = 8 + x * 48
  e(_oy) = 8 + y * 48
  e(_width) = 32
  e(_height) = 32
  e(_minx) = -8
  e(_maxx) = 8
  e(_speed) = 500
  e(_powerup) = RANDOM(0, 2)
END

stage_i += 1
GOSUB Save Stage
RESET enemies



ðŸ˜… Stage 2

swarm_count = 15
swarm_count_alive = 15

swarm_shoot_interval = 350
swarm_shoot_factor = 2

swarm_y_max = 7
swarm_y_interval = 15000

FOR i = 0 TO 5
  e = enemies(i)
  e(_enabled) = TRUE
  e(_ox) = 64 + i * 64
  e(_oy) = 16
  e(_width) = 32
  e(_height) = 32
  e(_minx) = -32
  e(_maxx) = 32
  e(_speed) = 1000
END

FOR i = 6 TO 10
  e = enemies(i)
  e(_enabled) = TRUE
  e(_ox) = 64 + (i - 6) * 64
  e(_oy) = 64
  e(_width) = 32
  e(_height) = 32
  e(_minx) = -32
  e(_maxx) = 32
  e(_speed) = 700
END

FOR i = 11 TO 14
  e = enemies(i)
  e(_enabled) = TRUE
  e(_ox) = 64 + (i - 10) * 64
  e(_oy) = 112
  e(_width) = 32
  e(_height) = 32
  e(_minx) = -48
  e(_maxx) = 48
  e(_speed) = 500
END

stage_i += 1
GOSUB Save Stage
RESET enemies



ðŸ˜ž Stage 3

swarm_count = 30
swarm_count_alive = 30

swarm_shoot_interval = 175
swarm_shoot_factor = 2

swarm_y_max = 7
swarm_y_interval = 5000

FOR i = 0 TO swarm_count - 1
  x = i % 10
  y = FLOOR(i / 10)
  
  e = enemies(i)
  e(_enabled) = TRUE
  e(_ox) = 8 + x * 48
  e(_oy) = 16 + y * 48
  e(_width) = 32
  e(_height) = 32
  e(_minx) = -8
  e(_maxx) = 8
  e(_speed) = 500
END

stage_i += 1
GOSUB Save Stage
RESET enemies

RETURN



------------------------------------------------------------
 * Initialize
------------------------------------------------------------

GOSUB Initialize Input
GOSUB Initialize Player
GOSUB Initialize Enemies
GOSUB Initialize Bullets
GOSUB Initialize Stages

GOSUB Initialize Functions


------------------------------------------------------------
 * Start
------------------------------------------------------------

GOSUB Start Player
GOSUB Start Stages

------------------------------------------------------------
 * Game Loop
------------------------------------------------------------

BEGIN GAMELOOP 75
  GOSUB Update
  GOSUB Render
END

------------------------------------------------------------
 * Update
------------------------------------------------------------

GOSUB Update Stage

GOSUB Update Input
GOSUB Update Player
GOSUB Update Enemies
GOSUB Update Bullets

RETURN

------------------------------------------------------------
 * Render
------------------------------------------------------------

COLOR "#000000"
FILL

BEGIN TRANSFORM
  
  x = (WIDTH - game_width) / 2
  y = (HEIGHT - game_height) / 2
  
  BEGIN CLIP x, y, game_width, game_height
    TRANSLATE x, y
    
    COLOR "#061119"
    FILL
    
    GOSUB Render Player
    GOSUB Render Enemies
    GOSUB Render Bullets
  END
END

COLOR "white"
ALIGN LEFT
TEXT 5, 5, CEIL(stage_timer / 1000)

COLOR "cyan"
ALIGN RIGHT
TEXT WIDTH - 5, 5, FPS

RETURN





------------------------------------------------------------
* Initialize Input
------------------------------------------------------------

INIT input_left
INIT input_right
INIT input_up
INIT input_down

INIT press_space
INIT press_escape

RETURN

------------------------------------------------------------
 * Update Input
------------------------------------------------------------

input_left = INPUT("A")
input_right = INPUT("D")
input_up = INPUT("W")
input_down = INPUT("S")

press_space = INPUT("SPACE")
press_escape = INPUT("ESCAPE")

RETURN





------------------------------------------------------------
 * Initialize Player
------------------------------------------------------------

INIT player_x
INIT player_y
INIT player_width
INIT player_height
INIT player_speed
INIT player_shoot_cooldown
INIT player_shoot_cooldown_timer
INIT player_powerup
INIT player_speedshot
INIT player_shield

RETURN

------------------------------------------------------------
 * Start Player
------------------------------------------------------------

player_x = game_width / 2
player_y = game_height - 32
player_width = 32
player_height = 32
player_speed = 300
player_shoot_cooldown = 500
player_shoot_cooldown_timer = 0
player_powerup = 0
player_speedshot = 0
player_shield = FALSE

RETURN

------------------------------------------------------------
 * Update Player
------------------------------------------------------------

RESET move
IF input_left : move(0) -= 1 : END
IF input_right : move(0) += 1 : END
IF input_up : move(1) -= 1 : END
IF input_down : move(1) += 1 : END
NORMALIZE move

speed = DELTATIME / 1000 * player_speed
player_x += move(0) * speed
player_y += move(1) * speed

player_x = CLAMP(player_x, 0, game_width - player_width)
player_y = CLAMP(player_y, 0, game_height - player_height)

player_shoot_cooldown_timer -= DELTATIME

IF player_speedshot > 0
  player_speedshot -= DELTATIME
  player_shoot_cooldown_timer -= DELTATIME * 2
END

player_shoot_cooldown_timer = _
  MAX(0, player_shoot_cooldown_timer)

IF player_shoot_cooldown_timer = 0
  player_shoot_cooldown_timer = player_shoot_cooldown
  GOSUB Spawn Player Bullet
END

IF press_space
  GOSUB Use Player Powerup
END

source_x = player_x
source_y = player_y
source_width = player_width
source_height = player_height

FOR j = 0 TO LEN(bullets) - 1
  bullet = bullets(j)
  IF bullet(_friendly) = FALSE OR bullet(_powerup) > 0
    GOSUB Check Bullet Intersection
    IF intersection
      IF bullet(_powerup) > 0
        player_powerup = bullet(_powerup)
        RESET bullet
      ELSE
        IF player_shield = TRUE
          player_shield = FALSE
          RESET bullet
        ELSE
          GOTO Exit
        END
      END
      BREAK
    END
  END
END

RETURN

------------------------------------------------------------
* Spawn Player Bullet
------------------------------------------------------------

GOSUB Spawn Bullet
IF NOT bullet_i = -1
  bullet(_x) = player_x + player_width / 2 - 4
  bullet(_y) = player_y - 24
  bullet(_width) = 8
  bullet(_height) = 24
  bullet(_directionx) = 0
  bullet(_directiony) = -1
  bullet(_speed) = 750
  bullet(_friendly) = TRUE
END

RETURN

------------------------------------------------------------
* Use Player Powerup
------------------------------------------------------------

IF player_powerup > 0
  
  IF player_powerup = 1
    player_shoot_cooldown_timer = 0
    player_speedshot = 2000
    GOTO Use Player Powerup Done
  END
  
  IF player_powerup = 2
    player_shield = TRUE
    GOTO Use Player Powerup Done
  END
  
  Use Player Powerup Done:
  player_powerup = 0
END

RETURN

------------------------------------------------------------
 * Render Player
------------------------------------------------------------

IF player_shield = TRUE
  COLOR "cyan"
  FILL player_x - 4, player_y - 4, _
       player_width + 8, player_height + 8
END

COLOR "green"
FILL player_x, player_y, player_width, player_height

RETURN





------------------------------------------------------------
 * Initialize Enemies
------------------------------------------------------------

DIM(48,24) enemies
DIM(24) enemy
INIT enemy_i

INIT swarm_count
INIT swarm_count_alive

INIT swarm_shoot_interval
INIT swarm_shoot_factor
INIT swarm_shoot_timer

INIT swarm_y
INIT swarm_y_max
INIT swarm_y_target
INIT swarm_y_velocity
INIT swarm_y_interval
INIT swarm_y_timer

RETURN

------------------------------------------------------------
 * Update Enemies
------------------------------------------------------------

swarm_shoot_timer = MAX(0, swarm_shoot_timer - DELTATIME)
IF swarm_shoot_timer = 0
  GOSUB Get Random Enemy
  IF NOT enemy_i = -1
    enemy = enemies(enemy_i)
    GOSUB Spawn Bullet
    IF NOT bullet_i = -1
      t = 1 - swarm_count_alive / swarm_count
      t = swarm_shoot_interval * LERP(1, swarm_shoot_factor, t)
      swarm_shoot_timer = t
      bullet(_x) = enemy(_x) + enemy(_width) / 2 - 4
      bullet(_y) = enemy(_y) + enemy(_height)
      bullet(_width) = 8
      bullet(_height) = 24
      bullet(_directionx) = 0
      bullet(_directiony) = 1
      bullet(_speed) = 250
      bullet(_friendly) = FALSE
    END
  END
END

swarm_y_timer = MAX(0, swarm_y_timer - DELTATIME)
IF swarm_y_timer = 0
  swarm_y_timer = swarm_y_interval
  swarm_y_target = MIN(swarm_y_max, swarm_y_target + 1)
END

SMOOTHDAMP swarm_y, swarm_y_target, swarm_y_velocity, 0.5

FOR i = 0 TO LEN(enemies) - 1
  enemy_i = i
  GOSUB Update Enemy
END

RETURN

------------------------------------------------------------
 * Update Enemy
------------------------------------------------------------

enemy = enemies(enemy_i)

IF NOT enemy(_enabled)
  RETURN
END

enemy(_time) += DELTATIME / 1000

t = enemy(_time) / 1000 * enemy(_speed) + enemy(_y) / 32
t = ABS(t % 2 - 1)
t = LERP(enemy(_minx), enemy(_maxx), t)
enemy(_x) = enemy(_ox) + t
enemy(_y) = enemy(_oy) + (swarm_y - 1) * 48

source_x = enemy(_x)
source_y = enemy(_y)
source_width = enemy(_width)
source_height = enemy(_height)

FOR j = 0 TO LEN(bullets) - 1
  bullet = bullets(j)
  IF bullet(_friendly)
    GOSUB Check Bullet Intersection
    IF intersection
      RESET bullet
      IF enemy(_powerup) > 0
        GOSUB Spawn Bullet
        IF NOT bullet_i = -1
          bullet(_x) = source_x
          bullet(_y) = source_y
          bullet(_width) = 24
          bullet(_height) = 24
          bullet(_directionx) = 0
          bullet(_directiony) = 1
          bullet(_speed) = 100
          bullet(_friendly) = TRUE
          bullet(_powerup) = enemy(_powerup)
        END
      END
      swarm_count_alive -= 1
      RESET enemy
      BREAK
    END
  END
END

RETURN

------------------------------------------------------------
 * Get Random Enemy
------------------------------------------------------------

RESET random_i
random_i_cursor = 0

FOR i = 0 TO LEN(enemies) - 1
  IF NOT enemies(i)(_enabled)
    NEXT
  END
  random_i(random_i_cursor) = i
  random_i_cursor += 1
END

IF random_i_cursor > 0
  random_i_cursor = RANDOM(0, random_i_cursor - 1)
  enemy_i = random_i(random_i_cursor)
ELSE
  enemy_i = -1
END

RETURN

------------------------------------------------------------
 * Render Enemies
------------------------------------------------------------

COLOR "darkred"

FOR i = 0 TO LEN(enemies) - 1
  enemy_i = i
  GOSUB Render Enemy
END

RETURN

------------------------------------------------------------
 * Render Enemy
------------------------------------------------------------

enemy = enemies(enemy_i)

IF enemy(_enabled)
  FILL enemy(_x), enemy(_y), enemy(_width), enemy(_height)
END

RETURN






------------------------------------------------------------
 * Initialize Bullets
------------------------------------------------------------

DIM(64,24) bullets
DIM(24) bullet
INIT bullet_i

RETURN

------------------------------------------------------------
 * Spawn Bullet
------------------------------------------------------------

bullet_i = -1
FOR i = 0 TO LEN(bullets) - 1
  bullet = bullets(i)
  IF bullet(_enabled)
    NEXT
  END
  bullet(_enabled) = TRUE
  bullet(_state) = 1
  bullet_i = i
  BREAK
END

IF bullet_i = -1
  ECHO "WARNING: Bullet Pool exhausted"
END

RETURN

------------------------------------------------------------
 * Check Bullet Intersection
------------------------------------------------------------

intersection = FALSE

IF bullet(_enabled)
  target_x = bullet(_x)
  target_y = bullet(_y)
  target_width = bullet(_width)
  target_height = bullet(_height)
  GOSUB Check Intersection
END

RETURN

------------------------------------------------------------
 * Update Bullets
------------------------------------------------------------

FOR i = 0 TO LEN(bullets) - 1
  bullet_i = i
  GOSUB Update Bullet
END

RETURN

------------------------------------------------------------
 * Update Bullet
------------------------------------------------------------

bullet = bullets(bullet_i)

IF bullet(_enabled)
  
  source_x = bullet(_x)
  source_y = bullet(_y)
  source_width = bullet(_width)
  source_height = bullet(_height)
  
  target_x = 0
  target_y = 0
  target_width = game_width
  target_height = game_height
  
  GOSUB Check Intersection
  IF NOT intersection
    RESET bullet
  ELSE
    IF bullet(_state) = 2
      speed = DELTATIME / 1000 * bullet(_speed)
      bullet(_y) += bullet(_directiony) * speed
    ELSE
      bullet(_state) = 2
    END
  END
END

RETURN

------------------------------------------------------------
 * Render Bullets
------------------------------------------------------------

FOR i = 0 TO LEN(bullets) - 1
  bullet_i = i
  GOSUB Render Bullet
END

RETURN

------------------------------------------------------------
 * Render Bullet
------------------------------------------------------------

bullet = bullets(bullet_i)

IF bullet(_enabled)
  IF bullet(_friendly)
    IF bullet(_powerup) = 0
      COLOR "limegreen"
    ELSE
      IF bullet(_powerup) = 1
        COLOR "green"
      ELSE
        IF bullet(_powerup) = 2
          COLOR "cyan"
        ELSE
          COLOR "#666"
        END
      END
    END
  ELSE
    COLOR "red"
  END
  FILL bullet(_x), bullet(_y), _
       bullet(_width), bullet(_height)
END

RETURN





------------------------------------------------------------
 * Initialize Stages
------------------------------------------------------------

DIM(3) stages
DIM(3,2) stage_player
DIM(3,2) stage_swarm
DIM(3,48,24) stage_enemies
DIM(3,64,24) stage_bullets

INIT stage_i

RETURN

------------------------------------------------------------
 * Start Stages
------------------------------------------------------------

stage_i = -1

swarm_count = 0
swarm_count_alive = 0

swarm_shoot_interval = 0
swarm_shoot_factor = 1
swarm_shoot_timer = 0

swarm_y = -1
swarm_y_target = 0
swarm_y_velocity = 0
swarm_y_timer = 0

GOSUB Setup Stages

stage_i = start_stage - 1

RETURN

------------------------------------------------------------
* Update Stage
------------------------------------------------------------

stage_timer = MAX(0, stage_timer - DELTATIME)
IF stage_timer = 0
  stage_timer = theme_milliseconds
  IF NOT stage_i = -1
    GOSUB Save Stage
  END
  stage_i += 1
  IF stage_i >= LEN(stages)
    stage_i = 0
  END
  GOSUB Load Stage
END

RETURN

------------------------------------------------------------
 * Save Stage
------------------------------------------------------------

stage_player(stage_i)(0) = player_x
stage_player(stage_i)(1) = player_y

stage_swarm(stage_i)(0) = swarm_count
stage_swarm(stage_i)(1) = swarm_count_alive

stage_swarm(stage_i)(2) = swarm_shoot_interval
stage_swarm(stage_i)(3) = swarm_shoot_factor
stage_swarm(stage_i)(4) = swarm_shoot_timer

stage_swarm(stage_i)(5) = swarm_y
stage_swarm(stage_i)(6) = swarm_y_target
stage_swarm(stage_i)(7) = swarm_y_velocity
stage_swarm(stage_i)(8) = swarm_y_interval
stage_swarm(stage_i)(9) = swarm_y_timer

FOR i = 0 TO LEN(enemies) - 1
  FOR j = 0 TO LEN(enemies(i)) - 1
    stage_enemies(stage_i)(i)(j) = enemies(i)(j)
  END
END

FOR i = 0 TO LEN(bullets) - 1
  FOR j = 0 TO LEN(bullets(i)) - 1
    stage_bullets(stage_i)(i)(j) = bullets(i)(j)
  END
END

RETURN

------------------------------------------------------------
 * Load Stage
------------------------------------------------------------

player_x = stage_player(stage_i)(0)
player_y = stage_player(stage_i)(1)

swarm_count = stage_swarm(stage_i)(0)
swarm_count_alive = stage_swarm(stage_i)(1)

swarm_shoot_interval = stage_swarm(stage_i)(2)
swarm_shoot_factor = stage_swarm(stage_i)(3)
swarm_shoot_timer = stage_swarm(stage_i)(4)

swarm_y = stage_swarm(stage_i)(5)
swarm_y_target = stage_swarm(stage_i)(6)
swarm_y_velocity = stage_swarm(stage_i)(7)
swarm_y_interval = stage_swarm(stage_i)(8)
swarm_y_timer = stage_swarm(stage_i)(9)

FOR i = 0 TO LEN(enemies) - 1
  FOR j = 0 TO LEN(enemies(i)) - 1
    enemies(i)(j) = stage_enemies(stage_i)(i)(j)
  END
END

FOR i = 0 TO LEN(bullets) - 1
  FOR j = 0 TO LEN(bullets(i)) - 1
    bullets(i)(j) = stage_bullets(stage_i)(i)(j)
  END
END

RETURN





------------------------------------------------------------
 * Initialize Functions
------------------------------------------------------------

INIT intersection

INIT source_x
INIT source_y
INIT source_width
INIT source_height

INIT target_x
INIT target_y
INIT target_width
INIT target_height

RETURN

------------------------------------------------------------
 * Check Intersection
------------------------------------------------------------

intersection = FALSE
IF source_x + source_width > target_x
  IF source_x < target_x + target_width
    IF source_y + source_height > target_y
      IF source_y < target_y + target_height
        intersection = TRUE
      END
    END
  END
END

RETURN





------------------------------------------------------------
 * Exit
------------------------------------------------------------

GOSUB Render
ECHO "GAME OVER"